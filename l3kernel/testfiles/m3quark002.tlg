This is a generated file for the LaTeX (2e + expl3) validation system.
Don't change this file in any respect.
Author: Phelype Oleinik
Defining \q__test_recursion_tail on line ...
Defining \q__test_recursion_stop on line ...
============================================================
TEST 1: New private quark functions (:n)
============================================================
Defining \__test_quark_if_recursion_tail_stop:n on line ...
> \__test_quark_if_recursion_tail_stop:n=\long macro:#1->\tl_if_empty:oTF
{\__test_if_test_recursion_tail:w {}#1{}?!\q__test_recursion_tail
??!}{\__test_use_none_delimit_by_q_test_recursion_stop:w }{}.
> \__test_if_test_recursion_tail:w=\long macro:#1\q__test_recursion_tail
#2?#3?!->#1#2.
> \__test_use_none_delimit_by_q_test_recursion_stop:w=\long
macro:#1\q__test_recursion_stop ->.
============================================================
============================================================
TEST 2: New private quark functions (:nn)
============================================================
Defining \__test_quark_if_recursion_tail_stop_do:nn on line ...
> \__test_quark_if_recursion_tail_stop_do:nn=\long macro:#1->\tl_if_empty:oTF
{\__test_if_test_recursion_tail:w {}#1{}?!\q__test_recursion_tail
??!}{\__test_use_i_delimit_by_q_test_recursion_stop:nw }{\use_none:n }.
> \__test_if_test_recursion_tail:w=\long macro:#1\q__test_recursion_tail
#2?#3?!->#1#2.
> \__test_use_i_delimit_by_q_test_recursion_stop:nw=\long
macro:#1#2\q__test_recursion_stop ->#1.
============================================================
============================================================
TEST 3: New private quark functions (:N)
============================================================
Defining \__test_quark_if_recursion_tail_stop:N on line ...
> \__test_quark_if_recursion_tail_stop:N=\long macro:#1->\if_meaning:w
\q__test_recursion_tail #1\exp_after:wN
\__test_use_none_delimit_by_q_test_recursion_stop:w \fi: .
> \__test_if_test_recursion_tail:w=\long macro:#1\q__test_recursion_tail
#2?#3?!->#1#2.
> \__test_use_none_delimit_by_q_test_recursion_stop:w=\long
macro:#1\q__test_recursion_stop ->.
============================================================
============================================================
TEST 4: New private quark functions (:Nn)
============================================================
Defining \__test_quark_if_recursion_tail_stop_do:Nn on line ...
> \__test_quark_if_recursion_tail_stop_do:Nn=\long macro:#1->\if_meaning:w
\q__test_recursion_tail #1\exp_after:wN
\__test_use_i_delimit_by_q_test_recursion_stop:nw \else: \exp_after:wN
\use_none:n \fi: .
> \__test_if_test_recursion_tail:w=\long macro:#1\q__test_recursion_tail
#2?#3?!->#1#2.
> \__test_use_i_delimit_by_q_test_recursion_stop:nw=\long
macro:#1#2\q__test_recursion_stop ->#1.
============================================================
============================================================
TEST 5: New private quark functions (:nN)
============================================================
Defining \__test_quark_if_recursion_tail_break:nN on line ...
> \__test_quark_if_recursion_tail_break:nN=\long macro:#1#2->\tl_if_empty:oTF
{\__test_if_test_recursion_tail:w {}#1{}?!\q__test_recursion_tail ??!}{#2}{}.
> \__test_if_test_recursion_tail:w=\long macro:#1\q__test_recursion_tail
#2?#3?!->#1#2.
> \__test_use_i_delimit_by_q_test_recursion_stop:nw=\long
macro:#1#2\q__test_recursion_stop ->#1.
============================================================
============================================================
TEST 6: New private quark functions (:NN)
============================================================
Defining \__test_quark_if_recursion_tail_break:NN on line ...
> \__test_quark_if_recursion_tail_break:NN=\long macro:#1#2->\if_meaning:w
\q__test_recursion_tail #1\exp_after:wN #2\fi: .
> \__test_if_test_recursion_tail:w=\long macro:#1\q__test_recursion_tail
#2?#3?!->#1#2.
> \__test_use_i_delimit_by_q_test_recursion_stop:nw=\long
macro:#1#2\q__test_recursion_stop ->#1.
============================================================
============================================================
TEST 7: Inside recursions (expect nothing)
============================================================
============================================================
============================================================
TEST 8: Inside recursions (expect `YESYESYESYES')
============================================================
YESYESYESYES
============================================================
============================================================
TEST 9: Recursion edge cases (expect nothing)
============================================================
============================================================
============================================================
TEST 10: Invalid signatures (expect errors)
============================================================
! LaTeX3 Error: Quark test function
(LaTeX3)        '\__test_quark_if_recursion_tail_break:nnn' is invalid.
For immediate help type H <return>.
 ...                                              
l. ...}
This is a coding error.
LaTeX has been asked to create quark test function
'\__test_quark_if_recursion_tail_break:nnn' with signature 'nnn', but that
signature is not valid.
! LaTeX3 Error: Function '\__test_quark_if_recursion_tail_break' contains no
(LaTeX3)        ':'.
For immediate help type H <return>.
 ...                                              
l. ...}
This is a coding error.
Code-level functions must contain ':' to separate the argument specification
from the function name. This is needed when defining conditionals or variants,
or when building a parameter text from the number of arguments of the
function.
============================================================
